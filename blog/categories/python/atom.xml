<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Carpe diem (Felix's blog)]]></title>
  <link href="http://www.idryman.org/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://www.idryman.org/"/>
  <updated>2013-09-28T19:18:29-07:00</updated>
  <id>http://www.idryman.org/</id>
  <author>
    <name><![CDATA[dryman (Felix Ren-Chyan Chern)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Python on OSX Mountain Lion (updated at May 21, 2013)]]></title>
    <link href="http://www.idryman.org/blog/2013/03/13/python-setup-on-mac-osx/"/>
    <updated>2013-03-13T08:47:00-07:00</updated>
    <id>http://www.idryman.org/blog/2013/03/13/python-setup-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Setting up programming environment is frustrating for newcomers. Although it is much easier than it was before, it’s still worth it to take note.</p>

<!--more-->

<h2 id="apple-developer-tools">1. Apple developer tools</h2>

<p>Not only the python development but all kinds of programming tasks on OSX require Apple developer tools. The instruction is easy; you download XCode from Mac AppStore, then you download <em>Command Line Tools</em> in the Downloads menu from the XCode Preference panel.</p>

<h2 id="homebrew">2. Homebrew</h2>

<p>Next, install OSX most popular package manager <a href="http://mxcl.github.com/homebrew/">homebrew</a>. Just copy and paste this command in the terminal.</p>

<p><code>bash
ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
</code></p>

<p>If it shows an error about user permission, do the following</p>

<p><code>bash
cd /usr/local
sudo chown -R USER_NAME local
</code></p>

<p>and setup environment variables in <code>~/.bash_profile</code> (if the file does not exist, create one)</p>

<p><code>bash
export PATH="~/bin:/usr/local/share/python:/usr/local/bin:$PATH"
</code></p>

<p>Now you can install the followings with <em>homebrew</em>.</p>

<p><code>bash
source ~/.bash_profile
brew install python --with-brewed-openssl
brew install gfortran
brew install freetype
brew install zmq
</code></p>

<p>Years before Mountain Lion, I used to install fortran via <a href="http://hpc.sourceforge.net">High Performance Computing for Mac OSX</a>, but it doesn’t work well with homebrew. Now it’s best to install everything with <em>homebrew</em>.</p>

<h2 id="python-virtualenv">3. Python Virtualenv</h2>

<p>```bash
pip install virtualenv
mkdir ~/.virtualenvs ~/.pip
export VIRTUALENV_DISTRIBUTE=true
export PIP_VIRTUALENV_BASE=$HOME/.virtualenvs
export PIP_REQUIRE_VIRTUALENV=true
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache</p>

<p>cat «END » ~/.bash_profile
# virtualenv should use Distribute instead of legacy setuptools
export VIRTUALENV_DISTRIBUTE=true
# Centralized location for new virtual environments
export PIP_VIRTUALENV_BASE=$HOME/.virtualenvs
# pip should only run if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true
# cache pip-installed packages to avoid re-downloading
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
END</p>

<p>cd ~/.virtualenvs
virtualenv data-scientists
source data-scientists/bin/activate
echo “source $HOME/.virtualenvs/data-scientists/bin/activate” » ~/.bash_profile
```</p>

<p>Now, if you type <code>which pip</code> it should print <code>/Users/YOUR_HOME/.virtualenvs/data-scientists/bin/pip</code>.</p>

<p>Install scipy, numpy, ipython, and matplot.</p>

<p><code>bash
pip install numpy
pip install scipy
pip install ipython
pip install matplotlib
pip install pandas
pip install tornado
pip install pyzmq
pip install ipython
</code></p>

<p>Finally, install opencv</p>

<p><code>bash
brew tap homebrew/science
brew install opencv
</code></p>

<p>If you want a additional nice GUI application for ipython, you can download it from <a href="https://github.com/liyanage/ipython-notebook#readme">IPython Notebook</a>.</p>

<p><img src="/images/ipython_notebook.png" alt="ipython notebook" /></p>

<h2 id="trouble-shooting">Trouble shooting</h2>

<p>Sometimes homebrew has trouble with fetching the source code. If you found it is stuck on downloading the files, do the following</p>

<p><code>bash
brew install -v opencv
</code></p>

<p>It will show the URL of the file it is going to download. Stop the command with ctrl-c, paste the URL to your browser and download it. After the download is complete, move the file to <code>/Library/Cache/Homebrew</code>.</p>

<p><code>bash
mv OpenCV-2.4.4a.tar.bz2 /Library/Caches/Homebrew/
</code></p>

<p>Continue the installation by</p>

<p><code>bash
brew install opencv
cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr . &amp;&amp; make all install
</code></p>

<h2 id="reference">Reference</h2>
<ol>
  <li><a href="http://hackercodex.com/guide/python-virtualenv-on-mac-osx-mountain-lion-10.8/">Python and Virtualenv on Mac OSX Mountain Lion 10.8 - Hacker Codex</a></li>
  <li><a href="http://www.calvinx.com/2012/11/02/virtualenv-with-numpy-scipy/">Virtualenv with numpy and scipy on Mac OSX - Calvin’s</a></li>
  <li><a href="https://pypi.python.org/pypi/virtualenv">Virtualenv 1.9.1 : Python Package Index</a></li>
</ol>
]]></content>
  </entry>
  
</feed>
